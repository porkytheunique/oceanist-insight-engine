name: Oceanist Insight Engine

on:
  schedule:
    # Runs at 01:30 UTC on Mon, Wed, Fri, Sun
    - cron: '30 1 * * 1,3,5,0'
  workflow_dispatch:
    inputs:
      script_to_run:
        description: 'Which script to run manually?'
        required: true
        default: 'news_curator'
        type: choice
        options:
        - news_curator
        - fishing_analyzer
        - oilgas_analyzer

jobs:
  run-news-curator:
    if: |
      (github.event_name == 'schedule' && (github.event.schedule == '30 1 * * 3' || github.event.schedule == '30 1 * * 0')) ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.script_to_run == 'news_curator')
    
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run the NEWS curator script
        env:
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: python run_news_curator.py
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "feat(news): update news log and insight data"
          file_pattern: "*.log *.json"
      - name: Create deployment package
        run: mkdir dist && cp news_insight.json dist/
      - name: Deploy insight file to server
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftps
          port: 21
          local-dir: ./dist/
          server-dir: /public_html/map-data/

  run-fishing-analyzer:
    if: |
      (github.event_name == 'schedule' && github.event.schedule == '30 1 * * 1') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.script_to_run == 'fishing_analyzer')

    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run the FISHING analyzer script
        env:
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: python run_fishing_analyzer.py
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "feat(fishing): update fishing insight data"
          file_pattern: "*.json"
      - name: Create deployment package
        run: mkdir dist && cp fishing_insight.json dist/
      - name: Deploy insight file to server
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftps
          port: 21
          local-dir: ./dist/
          server-dir: /public_html/map-data/

  run-oilgas-analyzer:
    if: |
      (github.event_name == 'schedule' && github.event.schedule == '30 1 * * 5') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.script_to_run == 'oilgas_analyzer')

    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run the OIL & GAS analyzer script
        env:
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: python run_oilgas_analyzer.py
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "feat(oilgas): update oil & gas insight data"
          file_pattern: "*.json"
      - name: Create deployment package
        run: mkdir dist && cp oilgas_insight.json dist/
      - name: Deploy insight file to server
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftps
          port: 21
          local-dir: ./dist/
          server-dir: /public_html/map-data/
