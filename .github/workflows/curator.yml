name: Oceanist Insight Engine

on:
  schedule:
    - cron: '30 1 * * 1,3,5,0'
  workflow_dispatch:
    inputs:
      script_to_run:
        description: 'Which script to run manually?'
        required: true
        type: choice
        options:
        - news_curator
        - fishing_analyzer
        - oilgas_analyzer

jobs:
  run-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt

      - name: Run NEWS script
        if: (github.event_name == 'schedule' && (github.event.schedule == '30 1 * * 3' || github.event.schedule == '30 1 * * 0')) || (github.event_name == 'workflow_dispatch' && github.event.inputs.script_to_run == 'news_curator')
        env:
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: python run_news_curator.py

      - name: Run FISHING script
        if: (github.event_name == 'schedule' && github.event.schedule == '30 1 * * 1') || (github.event_name == 'workflow_dispatch' && github.event.inputs.script_to_run == 'fishing_analyzer')
        env:
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: python run_fishing_analyzer.py

      - name: Run OIL & GAS script
        if: (github.event_name == 'schedule' && github.event.schedule == '30 1 * * 5') || (github.event_name == 'workflow_dispatch' && github.event.inputs.script_to_run == 'oilgas_analyzer')
        env:
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: python run_oilgas_analyzer.py

      - name: Commit changes to GitHub
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "feat(data): update insight and log files"

      - name: ⬆️ Upload insight file to Server
        run: |
          sudo apt-get -y install lftp

          if [ -f "news_insight.json" ]; then
            FILE_TO_UPLOAD="news_insight.json"
          elif [ -f "fishing_insight.json" ]; then
            FILE_TO_UPLOAD="fishing_insight.json"
          elif [ -f "oilgas_insight.json" ]; then
            FILE_TO_UPLOAD="oilgas_insight.json"
          else
            echo "No insight file generated, skipping upload."
            exit 0
          fi

          echo "Uploading $FILE_TO_UPLOAD..."
          
          # This command includes the fix to bypass the certificate check
          lftp -c "
            set ftp:ssl-force true;
            set ftp:ssl-protect-data true;
            set ssl:verify-certificate no; 
            open -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} -p 21 ${{ secrets.FTP_SERVER }};
            cd /public_html/map-data/;
            put -O . $FILE_TO_UPLOAD;
            bye;
          "
