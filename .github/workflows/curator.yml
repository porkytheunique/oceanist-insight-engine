name: Oceanist Insight Engine

on:
  schedule:
    # Runs at 01:30 UTC on Monday, Wednesday, and Sunday
    - cron: '30 1 * * 1,3,0'
  workflow_dispatch:
    inputs:
      script_to_run:
        description: 'Which script to run manually?'
        required: true
        default: 'news_curator'
        type: choice
        options:
        - news_curator
        - fishing_analyzer

jobs:
  run-news-curator:
    # This job only runs on its scheduled days OR if manually selected
    if: |
      (github.event_name == 'schedule' && (github.event.schedule == '30 1 * * 3' || github.event.schedule == '30 1 * * 0')) ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.script_to_run == 'news_curator')
    
    permissions:
      contents: write

    runs-on: ubuntu-latest

    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v4

      - name: 2. Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 3. Install dependencies
        run: pip install -r requirements.txt

      - name: 4. Run the NEWS curator script
        env:
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
        run: python run_news_curator.py

      - name: 5. Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "feat(news): update news log and insight data"
          file_pattern: "*.log *.json"

  run-fishing-analyzer:
    # This job only runs on its scheduled day OR if manually selected
    if: |
      (github.event_name == 'schedule' && github.event.schedule == '30 1 * * 1') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.script_to_run == 'fishing_analyzer')

    permissions:
      contents: write

    runs-on: ubuntu-latest

    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v4

      - name: 2. Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 3. Install dependencies
        run: pip install -r requirements.txt

      - name: 4. Run the FISHING analyzer script
        env:
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
        run: python run_fishing_analyzer.py

      - name: 5. Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "feat(fishing): update fishing insight data"
          file_pattern: "latest_insight.json"
