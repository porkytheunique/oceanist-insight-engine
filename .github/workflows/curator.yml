name: Oceanist Insight Engine

on:
  schedule:
    - cron: '30 1 * * 1,3,5,0'
  workflow_dispatch:
    inputs:
      script_to_run:
        description: 'Which script to run manually?'
        required: true
        type: choice
        options:
        - news_curator
        - fishing_analyzer
        - oilgas_analyzer

jobs:
  run-news-curator:
    if: |
      (github.event_name == 'schedule' && (github.event.schedule == '30 1 * * 3' || github.event.schedule == '30 1 * * 0')) ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.script_to_run == 'news_curator')
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - name: Run NEWS script
        env:
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: python run_news_curator.py
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "feat(news): update news data"
      - name: ⬆️ Upload news_insight.json
        uses: sebastianpopp/ftp-action@releases/v2
        with:
          host: ${{ secrets.FTP_SERVER }}
          user: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          # Correct syntax for this action to upload a single file
          entryPoint: lftp
          args: -e "set ftp:ssl-force true; set ftp:ssl-protect-data true; put -O /public_html/map-data/ news_insight.json; exit"

  run-fishing-analyzer:
    if: |
      (github.event_name == 'schedule' && github.event.schedule == '30 1 * * 1') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.script_to_run == 'fishing_analyzer')
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - name: Run FISHING script
        env:
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: python run_fishing_analyzer.py
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "feat(fishing): update fishing data"
      - name: ⬆️ Upload fishing_insight.json
        uses: sebastianpopp/ftp-action@releases/v2
        with:
          host: ${{ secrets.FTP_SERVER }}
          user: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          entryPoint: lftp
          args: -e "set ftp:ssl-force true; set ftp:ssl-protect-data true; put -O /public_html/map-data/ fishing_insight.json; exit"

  run-oilgas-analyzer:
    if: |
      (github.event_name == 'schedule' && github.event.schedule == '30 1 * * 5') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.script_to_run == 'oilgas_analyzer')
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - name: Run OIL & GAS script
        env:
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: python run_oilgas_analyzer.py
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "feat(oilgas): update oil & gas data"
      - name: ⬆️ Upload oilgas_insight.json
        uses: sebastianpopp/ftp-action@releases/v2
        with:
          host: ${{ secrets.FTP_SERVER }}
          user: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          entryPoint: lftp
          args: -e "set ftp:ssl-force true; set ftp:ssl-protect-data true; put -O /public_html/map-data/ oilgas_insight.json; exit"
